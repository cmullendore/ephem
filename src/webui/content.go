// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// src/webui/content/404.html
// src/webui/content/about.html
// src/webui/content/css/main.css
// src/webui/content/css/normalize.css
// src/webui/content/favicon.ico
// src/webui/content/get.html
// src/webui/content/index.html
// src/webui/content/robots.txt
// src/webui/content/save.html
package webui

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

type assetFile struct {
	*bytes.Reader
	name            string
	childInfos      []os.FileInfo
	childInfoOffset int
}

type assetOperator struct{}

// Open implement http.FileSystem interface
func (f *assetOperator) Open(name string) (http.File, error) {
	var err error
	if len(name) > 0 && name[0] == '/' {
		name = name[1:]
	}
	content, err := Asset(name)
	if err == nil {
		return &assetFile{name: name, Reader: bytes.NewReader(content)}, nil
	}
	children, err := AssetDir(name)
	if err == nil {
		childInfos := make([]os.FileInfo, 0, len(children))
		for _, child := range children {
			childPath := filepath.Join(name, child)
			info, errInfo := AssetInfo(filepath.Join(name, child))
			if errInfo == nil {
				childInfos = append(childInfos, info)
			} else {
				childInfos = append(childInfos, newDirFileInfo(childPath))
			}
		}
		return &assetFile{name: name, childInfos: childInfos}, nil
	} else {
		// If the error is not found, return an error that will
		// result in a 404 error. Otherwise the server returns
		// a 500 error for files not found.
		if strings.Contains(err.Error(), "not found") {
			return nil, os.ErrNotExist
		}
		return nil, err
	}
}

// Close no need do anything
func (f *assetFile) Close() error {
	return nil
}

// Readdir read dir's children file info
func (f *assetFile) Readdir(count int) ([]os.FileInfo, error) {
	if len(f.childInfos) == 0 {
		return nil, os.ErrNotExist
	}
	if count <= 0 {
		return f.childInfos, nil
	}
	if f.childInfoOffset+count > len(f.childInfos) {
		count = len(f.childInfos) - f.childInfoOffset
	}
	offset := f.childInfoOffset
	f.childInfoOffset += count
	return f.childInfos[offset : offset+count], nil
}

// Stat read file info from asset item
func (f *assetFile) Stat() (os.FileInfo, error) {
	if len(f.childInfos) != 0 {
		return newDirFileInfo(f.name), nil
	}
	return AssetInfo(f.name)
}

// newDirFileInfo return default dir file info
func newDirFileInfo(name string) os.FileInfo {
	return &bindataFileInfo{
		name:    name,
		size:    0,
		mode:    os.FileMode(2147484068), // equal os.FileMode(0644)|os.ModeDir
		modTime: time.Time{}}
}

// AssetFile return a http.FileSystem instance that data backend by asset
func AssetFile() http.FileSystem {
	return &assetOperator{}
}

var __404Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\xaf\xd4\x20\x10\xc6\xef\xfd\x2b\x46\xce\x76\xfb\x7c\x2f\x26\x1e\x80\xc4\xc3\x4b\x34\xd1\xc4\x18\x8d\x67\x1e\xcc\x2e\xa3\x14\x08\x33\xdd\x4d\xfd\xeb\x4d\x69\xba\xd1\x9b\xa7\x16\x98\xef\x63\xbe\x1f\xa3\x5f\x85\xe2\x65\xad\x08\x51\xe6\x64\x07\xbd\x7d\xc0\x27\xc7\x6c\x54\x2e\xe3\x4f\x56\x90\x5c\xbe\x18\xa5\xec\x30\xe8\x88\x2e\xd8\x01\x40\xcf\x28\x0e\x7c\x74\x8d\x51\x8c\x5a\xe4\x3c\xbe\x53\xfd\x40\x48\x12\xda\x1f\x98\x7c\x99\x11\xa4\xc0\xf3\x97\x0f\xcf\x9f\xf5\xb4\xef\xdf\xa5\xd9\xcd\x68\x54\x40\xf6\x8d\xaa\x50\xc9\x0a\x7c\xc9\x82\x59\xfa\x4d\xff\x96\x5d\x09\x6f\xb5\x34\xf9\xab\xe6\x46\x41\xa2\x09\x78\x25\x8f\x63\x5f\xbc\x06\xca\x24\xe4\xd2\xc8\xde\x25\x34\x6f\x76\x9b\x44\xf9\x17\x34\x4c\x46\xb1\xac\x09\x39\x22\x8a\x82\xd8\xf0\x6c\xd4\xe4\x99\xa7\xd9\x51\x3e\x79\x66\x05\xd3\xff\x09\x72\x69\xb3\x4b\xf4\x1b\xef\x2a\x3d\xed\x5c\x06\xfd\x52\xc2\xda\x5d\x68\xbe\x00\x37\x6f\xd4\xd4\xf3\x8f\xbe\x95\x3a\xf2\x7c\xaa\xf9\xa2\x20\x22\x5d\xa2\x18\xf5\xf6\x41\xc1\x1e\x44\x3d\x3d\x3c\x1d\x0d\x54\xdb\x25\xe0\x52\x2a\x37\x86\xb5\x2c\x1b\x46\x46\xbf\x34\x4c\x2b\x70\x74\x0d\x37\x10\x67\x0a\x98\xb7\xc0\x40\xf9\xbc\xf5\xb4\x61\x04\x74\x4c\x69\x3d\xe9\xa9\x76\xb3\xd8\x7a\x83\xf1\xd1\x7e\xcc\x57\x97\x28\xc0\xf7\xaf\x9f\xf4\x14\x1f\xad\xae\xf6\x5b\xc4\x86\x70\x73\x0c\xb9\x1c\x68\xe1\x5c\x96\x1c\xc0\x09\x48\x44\xa8\xad\x5c\x29\x60\x57\xed\x9e\xc3\x61\x59\xad\x76\x07\x16\xf7\x52\x16\x39\x6d\xa3\xa3\xec\xfb\xed\xff\x78\x75\x67\xbb\x48\x4f\x3b\x98\x8d\x54\x1f\xb3\x3f\x01\x00\x00\xff\xff\x15\x69\xb3\x99\x77\x02\x00\x00")

func _404HtmlBytes() ([]byte, error) {
	return bindataRead(
		__404Html,
		"404.html",
	)
}

func _404Html() (*asset, error) {
	bytes, err := _404HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "404.html", size: 631, mode: os.FileMode(438), modTime: time.Unix(1602766470, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _aboutHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x59\x5b\x8f\x1b\xb9\xd1\x7d\xf7\xaf\xa8\x4f\xdf\xc3\x26\x80\x46\x82\xbd\x17\x04\x1b\x8d\x36\xe3\x8d\x83\x15\xe0\x6c\x0c\x8f\x1d\x63\x1f\xab\xd9\xd5\x6a\xee\xb0\xc9\x5e\x92\x2d\xb9\xf7\xd7\x07\x55\x64\xdf\xe4\xb6\xb3\x40\x5e\x3c\x63\x0d\x59\xac\xdb\x39\x75\x48\x1d\xfe\xaf\x74\x2a\xf6\x2d\x41\x1d\x1b\x73\x7c\x76\xe0\x1f\xa0\x0c\x86\x70\xbf\xb1\xee\xee\xd7\xb0\x01\x83\xf6\x7c\xbf\xd9\x1c\x9f\x3d\x3b\xd4\x84\xe5\xf1\x19\xc0\xa1\xa1\x88\xa0\x6a\xf4\x81\xe2\xfd\xa6\x8b\xd5\xdd\x5f\x36\xf2\x87\xa8\xa3\xa1\xe3\x07\x32\xca\x35\x04\xd1\xc1\xab\x37\x3f\xbd\xfa\xe7\x61\x9f\x3e\x1f\xb7\x5a\x6c\xe8\x7e\x53\x52\x50\x5e\xb7\x51\x3b\xbb\x01\xe5\x6c\x24\x1b\xe5\xa4\xe5\xb2\x8b\xa6\x6b\xeb\x7c\x9c\xad\xb9\xea\x32\xd6\xf7\x25\x5d\xb4\xa2\x3b\xf9\xcf\x16\xb4\xd5\x51\xa3\xb9\x0b\x0a\x0d\xdd\x3f\xff\xc4\x4c\xeb\xf1\xdc\xe0\xcc\x88\x75\x77\x0a\x55\x4d\x1b\xd8\xcb\x5a\xa3\xed\x13\x78\x32\xf7\x9b\x10\x7b\x43\xa1\x26\x8a\x1b\xa8\x3d\x55\xf7\x9b\xbd\x0a\x61\xdf\xa0\xb6\x3b\x15\xc2\x1f\xde\x60\x9d\x6f\xd0\xe8\xdf\x69\xdc\x75\xd8\xa7\x1c\x3e\x3b\x14\xae\xec\xc5\x4a\x7b\x94\x1c\x01\x1a\xe3\xae\x01\x7a\xd7\x71\xde\x02\xa9\xce\x93\xe9\x21\xd4\xe8\x89\x9d\xae\x74\x49\x96\x23\x04\x6d\x2b\x36\xcc\x79\x03\xc2\xa0\x4d\xbf\x3b\xec\x5b\x31\x56\xfb\xec\x5b\xa9\x2f\x20\x5e\xdd\x6f\x22\x7d\x8c\x77\x68\xf4\xd9\x7e\x0f\x86\xaa\xf8\xd7\x94\x9a\xfa\xc5\xf1\xa1\x70\x5d\x1c\x4a\x54\xbf\x48\x1f\x7f\x7d\xfc\x50\x63\x84\x1a\xdb\x96\x6c\x80\x6b\x4d\x16\x4e\x10\xba\xa2\xd1\x11\x9a\x9e\x3d\xf3\x14\x7f\x38\xec\xeb\xaf\x65\x83\x33\xfc\x43\xd2\x71\x7c\x00\xe5\x9a\xd6\x50\x64\xcf\x3d\xda\xd2\x35\x50\x68\x8b\xbe\x87\x17\xdf\x7e\x07\x85\x8e\xf0\x44\x3d\xe8\x00\x67\xb2\xe4\x31\x52\xb9\x3b\xec\x8d\x9e\x2c\xbc\xab\x29\x9f\xc0\xab\xc8\x2a\xdf\xb7\x91\x4a\xe8\x82\xb6\x67\x88\xb5\x0e\x62\x01\x6d\x09\x0f\xaf\x1e\xef\xd8\x6a\x5e\xa4\x9d\xdd\x82\xea\xbc\x27\x1b\x4d\xcf\x19\x0b\xba\x24\x4f\x25\x38\x4b\xe0\x2a\x88\x6c\x3a\x7a\x67\xcf\x14\xe2\x6c\x17\xe0\x05\xb5\xc1\xc2\xd0\x8a\x2f\x0f\xaf\x1e\x07\x97\x95\xb3\x17\xf2\xec\x4c\x74\x80\xf0\x12\x03\x7d\xf7\x0d\x5b\x64\xcf\xd8\x21\x3e\xa0\xd2\x16\x0d\xbc\x7f\xfb\x5a\x76\x78\xc2\xbc\x5e\x5b\x65\xba\x92\xc6\x08\x56\x8e\xe2\x4d\x2d\xc6\x9a\x97\xc7\x31\x0d\xdb\xbc\x35\x85\x3f\x3a\xb4\x65\xfb\x35\x86\x7a\xcc\xcd\xe3\x4f\x0f\xdf\x3e\x7f\xb1\x95\x45\x7f\x3c\x0d\xd6\xd9\x3b\x4f\x17\xf2\x41\x17\x86\xc4\xa2\x84\x63\xce\xce\xf7\xb1\x6e\xbe\x98\x9c\x7c\xbe\x38\xcd\x09\x98\xca\x95\x4b\xc8\xad\x1b\xa2\xe3\xd3\xb5\x05\x84\x12\x23\x16\x18\x68\x0b\x68\x9c\x3d\xc3\x55\x73\xb8\x12\x6b\x8c\xda\x9e\x03\x54\xce\x83\xed\x9a\x82\x3c\xfb\xea\x29\x7a\x4d\x17\x34\x41\xec\x1b\x5d\x51\xd4\xcd\x9a\x2b\x63\x3f\x0d\xb9\xf7\x14\x3b\x6f\x53\xf2\xf9\x84\xf7\x27\xb1\x9d\xe1\xa5\x5c\x9b\x9a\xa8\x72\xfe\xec\x62\x24\x0b\x45\x2f\xeb\xb0\x6d\x8d\x56\x02\xae\x1d\xb0\xe5\xce\xde\xe5\x38\x87\x02\xed\x87\x0e\x9c\xaa\x24\x91\x5a\xce\xe3\x16\xd2\xbf\x2d\xa7\x34\xc4\x14\x79\xac\x49\x7b\xf0\x78\xe5\xf3\x9a\xd1\xfd\xc3\x3e\x81\xe7\x73\xa0\xeb\x42\x6e\x98\x65\x74\xd1\x0d\x89\xa1\xff\x06\xc8\xa1\xaf\xd6\x9b\x45\x82\x18\x4c\x95\x50\x79\xd7\x48\x4c\x43\x99\xe6\xa8\xe3\xed\x63\xd0\xf3\x0a\x61\x19\xd8\xbc\xb6\xca\x53\x43\x76\x1d\xd2\x33\x18\xd1\xc7\xe8\x51\xc5\xf9\x79\xec\x21\x9b\x9e\x10\x56\xa0\x7a\x02\x6d\x05\x68\x99\x40\xd6\x41\x33\x71\x45\x49\x2b\x5c\xf1\xc5\xbd\xd3\x8e\xc9\xca\xa7\x6d\x73\xb3\xf1\x83\x8e\xb5\xb6\xf0\x9c\xf7\xb8\x65\x0f\xe8\x00\x6d\xe7\xcf\x6b\x99\x5c\x2d\xf9\xa9\x1a\xa3\xd7\x41\x7e\x15\x60\xd7\xee\x0a\x0a\x85\x74\x85\xfb\xf3\x9a\xa9\xc0\xed\xf1\xc1\xf6\x10\x22\xda\x12\x7d\xb9\x85\x83\x3e\x7a\xc2\xe0\x2c\x16\xa6\x3f\xec\xf5\x11\x5a\xaf\x2f\x18\x79\x6c\x34\x4d\x67\x73\x3b\x43\x43\xaa\x46\xab\x43\x03\xa1\x76\x9d\x29\xa1\x10\xbe\xa2\x2d\x84\x4e\xd5\x80\x01\xa8\x41\x6d\xc0\x79\x08\x06\xd5\xd3\x0e\x4e\x12\x54\xef\x3a\x0f\x9e\x42\xcb\x5c\x52\x68\xa3\x63\xcf\xe9\x21\x1b\x3a\x71\x0f\xe3\x22\x0e\xf4\x67\x8a\x53\x06\xb1\x6d\xbd\x6b\xbd\x66\x7f\xb4\x2d\xf5\x45\x97\x1d\xca\x21\x67\xef\xba\x56\x50\x39\xe2\x7c\x07\x2f\x49\x61\xea\xfb\x29\xaf\x31\x90\xa9\xd8\xb6\x20\x0c\xa2\x47\x1b\x2a\xf2\x4c\x2b\xdc\x36\x69\x7e\xea\x00\xce\x9a\x7e\x22\x2c\x61\x17\x6d\xe1\xad\x2b\x8c\xfb\xb8\x9d\xfb\x48\x21\xa4\x59\x6a\x7a\x06\x99\xa1\x10\x84\xd4\x2d\x77\x27\x79\xa6\xf0\x16\x7d\xec\x77\x70\xb2\x80\x65\xa9\xd3\x74\xc1\x00\x42\x5b\x98\xaa\xd5\x7a\xdd\x70\x77\x69\x16\x14\x25\x31\x94\x94\x6e\x35\xd9\xc8\xbf\x91\xbe\x50\xa2\xad\x2e\x50\x18\x4f\xaf\xb4\x0f\x71\x3b\xb0\x0d\xb3\x19\x04\xd7\x10\x93\x33\x99\x40\xd3\xce\x61\xc3\x2c\x11\x57\x6d\x0c\xd4\x78\x21\x28\x88\xec\xd0\x6c\x03\x28\x73\x6c\x57\xe7\x63\xcd\x11\x4d\xa2\xe0\xeb\xe3\x8f\xd2\x4f\x67\x26\x2a\x2e\xbe\x8f\xe4\x6f\x7b\xea\x67\x97\xf8\x8e\xcd\xb0\x46\x42\x6d\x93\x13\x07\x7d\x1c\xa6\xba\x34\xd7\x6c\x72\x0e\x44\x38\x8c\x2d\xe9\x94\xe4\xec\x0e\xde\x0b\x0c\x51\x0c\xa6\x33\x2d\x79\xb6\xa6\x9b\xd6\x68\x0a\x62\x6c\xec\x9e\x61\x45\xa2\x38\x4f\x15\x79\xb2\x2a\xe7\x61\x38\x5f\xfe\x76\xad\xb5\xaa\x33\x62\xec\xc4\xb3\xbb\xdd\x4e\x32\x79\xad\xc9\x13\x9f\x2e\xd3\xee\xf6\x78\x1d\xf2\xf0\x33\x3d\x94\x3a\x28\xd7\x79\x3c\x53\xb9\x83\x0f\x9c\xfa\x40\xfe\x92\x5a\xcf\xeb\x73\x1d\xd3\xe0\x66\xb5\xa8\x9d\x95\x66\x29\x8c\x53\x4f\x89\x5a\x44\x36\xbb\x0a\x0a\xaa\xf1\xa2\x9d\x4f\x13\xae\xea\x22\x83\xc2\x93\xa1\x04\xfb\x9b\x12\x44\x1e\xba\x63\x69\x3f\x05\x51\xae\x34\xe3\xbf\xa0\x89\x9b\x17\x85\xfa\xd7\x90\xdb\xb1\xa7\x9c\x07\xb4\x3d\x37\x44\xeb\x02\x01\x46\x56\x93\x0b\xe5\x40\x81\xe7\x2b\xe8\xb8\x4d\x5d\xa4\x5c\x67\xe3\xd0\xc8\xcf\x85\xc6\x6f\x47\x9a\xac\x2b\x28\xb7\x19\x37\x87\x16\xa6\x2f\x7a\x28\x29\xe8\xb3\x9d\x47\x27\xe3\x4b\x57\x70\x02\xe3\xc2\x2a\x67\xbd\xe3\x6a\x2d\xd9\xd2\x38\x86\x42\x67\x07\xf8\x17\x86\xb6\xe3\xb1\xd8\x45\xc7\x22\x57\x49\xe2\x73\xaf\xcf\xe4\x65\x46\xf7\x8b\x6f\xa0\x76\x9d\x0f\x6b\xce\x0c\xc0\x1a\xd2\x18\x96\xd3\x2d\x77\x79\xd2\x3b\x66\xd4\x46\xe2\x5e\x58\x42\x23\x8a\x2a\x4a\x93\x7c\x32\x20\xcd\x34\xa9\x9b\x59\x18\x90\x14\xba\x38\xc9\x1a\x3b\x93\x3b\x84\x96\x94\xae\x72\x4c\xd3\x54\xe7\x02\x4a\x0b\x0c\xd8\x79\xb7\x38\x66\xe4\xbf\x59\xf8\x99\xb6\xd6\xc2\xe6\xc3\x6e\x40\x9a\xb9\x78\xee\x39\x9a\xe0\xc4\xa0\x77\x8d\x0e\xcb\x16\x7b\xc7\x18\x12\xa8\x06\xb0\x4e\x80\xaa\xc8\x46\x9f\x78\x7b\xe0\xbd\xe5\x19\x53\x83\xe0\xb8\xa2\x22\x14\x38\xb8\x2a\x91\x34\x63\x74\x4c\x66\x80\xe8\x3b\x41\x2e\x7f\x76\x2b\xbe\xb6\x60\xf3\x87\x93\x68\x1c\x3e\xc1\xb2\xd1\x56\x87\xe8\x31\x3a\x1f\xc6\xc2\xf5\x21\x52\x93\x72\x97\x8b\x38\x94\x78\x54\x61\x53\x06\xd2\xad\x6a\x4a\xe7\xbc\x09\x17\x65\x4b\xd7\x98\x45\xb9\xde\xbf\x7d\xfd\xa5\x76\x3b\xf3\xc9\x71\x49\xa5\x03\x5c\xb9\x18\x0f\x3f\xff\x7d\xe1\xcb\x62\xb2\x4f\x23\x46\xc8\x74\x65\xb6\xac\x8d\x93\x25\xae\xac\x13\x23\xe4\x3f\x8d\xda\xf6\x57\xec\xb7\x10\xdc\x27\x5b\xe2\xbc\x19\x76\x70\xba\x89\xa7\x70\x59\xaa\x8f\xb6\x86\x30\xb2\x91\xf7\x6f\x5f\x6f\x27\x6e\x4e\xa3\x94\x15\xa1\x24\xd7\xe8\xa7\x74\x25\x54\x02\xbb\x34\x50\x85\x70\x82\x22\x8b\x5e\xbb\x6d\xa2\x73\x41\x01\xcf\x5e\xad\x3a\x83\x7e\xa9\xcc\x86\xfa\x70\xc3\x80\x8b\x35\xf9\x1b\xbe\x9c\x14\x1d\xf3\xb1\xdc\x97\x2b\x9d\x46\x83\x20\x7c\xb6\x25\xac\x76\x44\x88\xcc\x3e\xe9\xf2\x3d\x2f\xf1\x4f\xee\x0a\xa5\x83\x13\x3c\x59\x77\x1d\x30\x96\xcf\xae\x31\xa4\x79\xbc\xca\xd6\x3f\x8e\x57\xb1\x28\xa0\x4a\xe5\xb1\x2e\x0a\x0d\x48\x1a\xe6\x17\x9d\x19\xcd\x12\xf7\xcc\xec\xfe\x86\x61\x9a\x2f\x19\x58\xb7\x2e\x26\xd9\x38\x9f\x29\x22\x89\xd8\xd9\x95\x46\xe2\xd5\xdd\x3a\x59\xaf\x7b\x3d\x09\x48\x21\xac\x7e\x9a\xef\x22\xd4\x07\x72\x9b\xcb\xbc\x1b\x75\xf7\xbf\x07\x97\x34\xf1\x78\xed\x49\x57\xc8\xa6\x33\x51\xb7\x86\xa6\xe0\xc2\x92\xce\xd2\xa9\xdc\xe4\xad\x0b\xe9\xaa\xdb\x65\x79\xc2\x3f\x0c\xa5\xf6\x9d\x46\xdb\x8c\x45\xa0\xc1\x9e\x9b\x2b\x3d\x81\x70\x73\x8d\xc7\xb1\x7c\x4b\x1a\x8f\x50\xd5\x9f\xa1\x8a\x71\x3f\xe7\x3c\xba\xf9\x3d\xfc\xd3\xa2\x84\x1d\xbc\xf4\x0e\x4b\xf2\x2c\x4f\xa2\xd7\x45\x37\xf4\xc8\xd0\xb7\x93\x78\x2f\xd9\x54\x8e\xc3\x02\x1a\x91\xae\x31\x4b\x6e\xbe\xd1\xcd\x14\x7f\x56\xf8\xcf\xdf\x60\x08\x57\xe7\x05\x21\xff\xc6\xce\xc4\x2f\xa5\x19\xa1\xd2\x63\xaa\x84\xc1\xd7\xd2\xfa\x49\x31\x45\x8f\xdc\x4a\x21\x26\xf9\xdc\x94\x4c\x2c\x62\x39\x8c\x7e\x3d\x3e\xbe\x06\x45\x3e\xa3\x82\x93\xca\x8d\xe0\xe9\xb7\x2e\xb5\x61\x9e\xb3\x18\x20\xb0\x7c\x24\x88\xf4\x31\x26\x1b\xa9\x56\xf9\x59\x6f\x98\x06\x61\x38\x20\x33\x83\xc4\x53\xce\x23\xe1\x7b\xba\x1d\xa0\x2c\x61\xe6\x39\xab\xd0\x72\xa3\x14\x8b\x06\x7c\x94\xa4\xdb\xaf\x22\x5c\x59\x7d\x67\x43\x92\x40\x09\x77\x45\x35\xfc\x43\x5a\xbf\x25\x8c\x5b\x68\xbd\x3b\x7b\x6c\x44\xcf\x00\x2a\x45\x21\x6c\xe1\x97\x57\x8f\xdb\x6c\x42\x0f\x3a\xd7\x7b\x52\x9c\x20\xd3\xa5\x17\x88\x0f\x35\x7b\x36\x82\x10\xa1\xd1\xd6\x79\x70\x17\xf2\x06\xdb\xd4\xfd\x33\xe4\x65\x87\x12\x80\x66\xc6\x39\xa0\x85\xf6\x48\x6d\x3e\x4a\x0f\x1d\xe0\x49\xdb\x72\xd9\x66\x28\x2f\x5b\xce\x43\x83\x16\xcf\x72\xb9\x5f\x6f\x96\xf4\xce\x25\x0a\xa8\x0b\x32\x40\xd3\xc5\x25\xe9\x50\x77\x0d\xd0\xb8\x44\x48\x56\xb4\x66\xa6\x83\x79\xb2\x58\xae\xaf\xf4\xe6\x74\xb7\xe3\x08\x46\xb8\xb0\xd3\xce\xa7\x57\xd1\x73\xe7\xd3\x65\x33\x74\x6d\xeb\x7c\x4c\xd1\x30\xaf\xa9\x1b\x05\x3e\x39\xcc\x86\xce\x0c\xd0\x65\xe8\x55\x67\x55\x92\xfa\x7c\xc5\x95\xe7\x87\xa6\x07\x77\xb5\x73\x61\x32\xf7\x3a\x79\x77\xc5\x00\x57\xaf\xe5\x15\xe9\xe1\xcd\xe9\x4e\x66\xf2\x0e\x1e\x52\x77\x6f\x41\xa7\xa7\x81\x81\x78\x58\xf5\xcb\xab\x2d\x78\x6a\x5c\xbe\x6f\xbc\x3f\x81\xc1\x9e\x7c\x22\x93\x8f\xca\x74\x41\x5f\xb2\xce\xbb\x15\x74\x82\x85\x1d\xbc\x11\x5c\xb1\x74\x57\x35\x88\x5a\x71\x70\xb2\x95\x7b\x24\x05\x17\x8d\xf2\x4c\x1c\x48\xfd\xcd\xcb\xfd\x77\xa7\x5c\xc3\x39\xfb\x7f\x19\x6e\x1c\x1f\x27\x51\xea\x32\x7f\x4f\x4e\xcf\x30\xc6\x60\xe1\x7c\x9e\x4e\xf6\xf3\x19\xfd\x85\x25\xca\xfb\x53\xea\x4c\xa3\x63\x34\x94\xf0\xa9\x43\xd4\x6a\xb7\xdb\xcd\x72\xf5\x0b\x23\xf5\x03\x7d\xe5\x49\x6a\x59\x79\x67\xe3\x1d\xd9\x12\x4a\xba\x24\x0e\xcd\xc8\xe6\xe2\xf8\x0a\xf9\xee\xe7\xa9\xec\x14\x41\x83\x52\x79\xb4\xa2\x1e\x42\x4c\xab\x87\x38\x94\xb3\x8a\xbc\x0d\xd3\x74\x49\xd7\x40\x8c\x9f\xbb\xaa\x64\x30\xc9\x0c\x77\x9d\x17\xab\xa5\x68\xf6\x35\x92\x1b\x17\x71\x94\xe3\xe3\x02\x46\x38\x60\x7e\xec\xaf\x63\x6c\xc3\xf7\xfb\xfd\x59\xc7\xba\x2b\x76\xbe\x90\x6c\xef\xd3\xc3\xc3\x9e\xda\x9a\x9a\xcd\xf1\x0f\x2c\x3a\xec\xf1\xb8\x83\x57\xfc\x2b\xfc\x49\xee\xac\x72\x8f\x80\x8d\x7c\x44\x1e\xcd\xe6\xcf\x83\xe3\xce\xeb\xb3\xbc\x35\xb7\xde\xfd\xca\x9c\x61\xb1\xa1\x8c\x66\xca\x0a\x46\x9e\xd1\x18\xc3\xb9\x63\x46\x30\xf1\x92\x82\xa7\x15\x4f\xa8\x53\x42\x6a\x17\xb5\xd1\xbf\x8b\xb4\xe4\xcc\x2d\x76\xae\x82\xa8\x26\xd3\x0e\x2f\xb8\xdc\xdf\xc9\x8f\x05\x03\x12\x19\x26\x71\xe9\x79\x65\x78\x5a\x89\xa2\xa6\xd6\xa5\x12\xa6\x2f\x15\xda\xce\x18\x10\xaa\x0f\x93\x64\xe7\xc3\x45\x01\xf3\x04\x3b\xa7\xde\x61\x09\xb6\x7a\x49\xf7\x24\x29\xc8\x4b\x53\x04\xa5\xa8\x2c\x90\x2f\x3e\xa6\x87\xe6\x91\x42\x86\x76\x96\x94\x91\x16\x65\x98\xf2\xc3\x5d\xc0\xf9\x1e\x11\x36\x4c\x36\x79\x30\xe8\x42\xb8\x71\x6d\x32\x3e\xa0\x2f\x12\x36\x50\x50\xc5\xe0\x2a\x5d\x1a\xcf\x3d\x5c\x9d\x7f\x9a\x5d\xf9\x97\x16\xf2\x9d\x57\x29\x6a\xd3\x0b\xea\x98\xf0\x53\x58\xe4\x17\x5c\x4b\x36\x77\xe4\x0f\xf0\x23\x5a\xa6\x97\x82\xd6\xe6\x72\x67\xd9\xe9\xc1\xfb\x84\xe6\xa2\xcb\x17\xfb\x88\x4f\xe9\xe5\x09\x3c\x55\xda\x0a\xbb\x0f\xb2\x44\xd0\xf0\x5b\x97\x68\x30\xc7\x71\x15\xe4\x7a\xc2\x32\x3d\xfe\x7d\x94\x97\x06\x1d\x87\xab\xe5\xd5\x79\x53\xee\xe0\x65\x27\x7a\x69\x18\x9e\x87\x7d\xa9\x2f\xc7\x67\xf9\x7b\xa9\x43\x7b\x1c\x31\xb3\xc7\xc2\x75\x71\x57\xc7\xc6\x6c\x96\x5f\x44\xe1\x31\x6f\x4d\x5f\x91\x3d\x3b\xec\xd3\x97\x93\xff\x09\x00\x00\xff\xff\x21\xc4\xa1\x55\xad\x1c\x00\x00")

func aboutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_aboutHtml,
		"about.html",
	)
}

func aboutHtml() (*asset, error) {
	bytes, err := aboutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "about.html", size: 7341, mode: os.FileMode(438), modTime: time.Unix(1602766470, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cssMainCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x6b\x6f\xdc\x36\xd6\xfe\x3e\xbf\xe2\xd4\xf9\x90\x64\x30\x1a\xcd\x8c\x3d\x8d\xad\xa2\x40\x93\xb4\xef\x9b\xee\x36\x6d\xb6\xeb\xbd\x00\xc5\x6e\x4d\x91\x47\xd2\xe9\x50\xa4\x4a\x52\x23\x4f\xd2\xfc\xf7\xc5\xa1\xa4\xb9\xd8\xed\x06\x0b\xd8\x46\x10\x58\x24\xcf\x85\xcf\x79\xce\x85\x4e\xa7\x9f\xc1\x9b\xeb\xb7\xdf\xad\xe1\x95\x25\x8d\xae\xd1\x22\x20\x6c\x5f\xcc\xcf\xe7\x0b\xf8\x0d\xde\x7e\x7b\x0d\xdf\x91\x44\xe3\x11\x7e\x83\x2a\x84\xc6\x67\x69\x5a\x85\x5a\xaf\xf3\xc3\xf9\xb9\xb4\x75\x0a\xd3\x74\x32\x49\xa7\x50\x0b\x32\x73\xe9\x3d\xac\xe6\x8b\xff\xa2\xa3\xa4\x50\xb5\x79\x94\xac\xd6\x79\x93\x8e\x62\x4f\x1c\x0a\x55\x23\x6b\x4b\xa7\x13\x98\xc2\x3f\x2a\x11\xa0\xb0\x5a\xdb\xce\x03\x79\x08\x15\x82\x43\xdf\xea\x00\xb6\x80\xba\x95\x15\x7f\xa2\x70\xb2\x02\x6b\x40\x3a\xeb\x7d\x92\x3b\xdb\x79\x74\xe0\xc3\x4e\x93\x29\xe7\xac\xe8\xb5\x43\x45\x01\x34\x16\x01\xc8\x68\x32\x08\xc2\x28\xc8\xa9\x84\x50\x09\xb3\xf1\x10\x2c\x7c\x4f\xd2\x6a\xe1\xe1\xff\x85\xd6\xa2\xac\xd0\xcd\xe0\x4f\xd6\x08\x3e\x00\xdf\xa3\xd0\x33\xd6\xf4\x67\x67\x25\xbc\x16\x35\x9a\x59\x54\xc1\x2e\xbd\x59\xbf\x7a\x07\x0a\xb7\x20\x6d\x5d\xb7\x86\xc2\xae\xdf\x42\x51\xb3\xf5\x1e\x9b\x2f\x1f\xec\x67\x02\x00\xaf\x84\xc7\x78\x43\xf4\x19\xd8\x86\x0c\xb1\xa7\xa8\x40\x61\x21\x5a\x1d\x3c\x1f\x7a\x38\x93\xf1\x12\x1c\x7a\xf8\x30\x01\x90\x56\x5b\x97\xc1\x93\xd5\x6a\xf5\xc5\x04\xa0\xb0\x26\x24\x9e\xde\x63\x06\x4b\xac\x79\x85\x01\x4e\x2a\xa4\xb2\x0a\x19\x2c\xe7\x17\x5f\x4c\x3e\x4e\x86\x90\xfe\x88\xb5\xdd\x22\x04\xbc\x0d\x89\xaf\x84\xb2\x1d\x90\x01\x8f\x1a\x65\x20\x6b\xa0\xa2\xb2\xd2\x51\x90\x4f\x8f\x8c\x09\x1d\x85\x80\x2e\x52\xa6\xa6\x0d\x06\xb1\xd3\x2e\xf5\x41\x84\xd6\xa7\xcb\xd5\x6a\x75\x79\xb9\x58\x9f\x2f\x96\x13\x88\x46\xfe\x8e\x46\x59\x97\x34\x0e\x0b\xba\x45\x15\xa3\xe1\xb0\x6c\xb5\x70\x90\x65\x07\x63\xfd\x6f\xd6\x79\x90\xc2\x18\x1b\x20\x47\x8e\x61\x4e\x06\xd5\x89\x7d\x1f\x84\xdc\xd8\x2d\xba\x42\xdb\x2e\x7a\x21\xd2\xe5\xe7\x57\x97\xab\xf5\x72\x91\xbe\x58\x9e\x9f\x5f\xbc\x18\x6d\xbf\x6e\x7d\xb0\x35\xbd\xc7\x48\x8d\x5c\xc8\x4d\xe9\x6c\x6b\x54\x8f\x1a\xf3\xac\x16\x41\x56\xb0\xb3\xad\x03\x85\x9e\x4a\x33\x90\x24\xcb\x92\xda\xbe\x4f\x0e\xee\x31\xd6\x07\x05\x19\x3c\xc9\xcf\xd5\x45\x21\x19\xe1\x23\xfc\x32\x30\xd6\x60\x84\xf8\xf8\x6e\xff\xb3\x70\x1f\x9f\x97\x90\x23\x43\x0d\xda\xda\x0d\x99\x72\x24\x14\x54\xd6\xd1\x7b\x6b\x82\xd0\xe0\x5a\x8d\xbd\xcb\x95\x8b\x76\x14\xf9\x46\x8b\x5d\x06\xb9\xb6\x72\xc3\x26\xf6\xc1\x6f\x6e\xf9\x33\xb7\x4e\xa1\xcb\x60\x71\xf8\x48\x82\x6d\xe2\x3e\x78\xab\x49\xc1\x13\x29\xa3\x73\xb5\x70\x25\x99\x48\xa5\xfe\x78\x23\x94\x22\x53\x46\xe1\x7b\x34\xaa\x10\x4a\xd1\xb0\xcf\x1d\xa2\x01\xd1\x2a\xb2\x33\x8e\xe6\x56\xf8\x19\x50\xe1\x44\x8d\x3e\x26\x2e\xd5\xa2\x44\x3f\x83\x2d\x29\xb4\x7e\x9f\xbb\xb9\x0d\xc1\xd6\x5c\x4e\x42\x85\xe4\x40\xf2\x15\xc9\xa0\xf3\x27\x04\xb8\x5b\xb2\x62\x19\x4c\x8e\xea\x60\x4a\xde\xb7\xe8\xd3\x8b\x8b\x45\x0f\x4d\xef\xca\x64\x70\x65\xd2\xbb\x32\x9b\x50\x5d\xce\x26\x7e\x5b\xce\x26\xd1\x91\x08\xdf\x16\x5d\x20\x29\x74\x22\x34\x95\x26\x83\x9a\x94\xd2\x78\xff\xb6\x63\x28\x0a\x42\xad\x3c\x86\xa1\x00\x0c\xf4\xd9\xaf\x7e\xb8\x0b\xf8\x08\xe9\x1f\xc3\xf9\x92\x4b\x2c\x58\xa3\x77\x7b\x67\xb8\xb2\xd2\x7b\x66\x00\x63\x83\xb7\x41\x38\x14\xa3\xad\xf1\x3b\xda\x8a\x07\x31\xdb\x4b\x0e\x7a\x1f\xba\xe2\x0d\x65\xfd\x6f\x4d\xe9\x84\x42\x78\xe7\x6c\xdd\x84\x47\x28\x73\xf3\xa1\x81\xb4\x83\xa1\x0f\xc7\x08\xce\x57\x23\x2d\x4f\x72\x6b\xe0\xee\x58\x18\x17\x8b\x3b\x50\x8f\x62\x8f\x01\xcc\xcb\x36\x54\xd6\x3d\xf5\x20\x63\xe5\x19\x48\xf1\x08\xc0\x3c\xb8\xe7\x6f\x50\x37\xe8\x40\x6a\xe1\xfd\x23\x79\xcc\xe4\x7e\x43\x0a\x61\x4b\xbe\x15\x5a\xf7\x9d\xb9\x70\x8c\x93\x74\x5c\x32\x78\xe6\x40\xe7\x7b\x5e\xcf\x2b\x52\x0a\xcd\x69\x51\xe3\x0a\x09\x9f\x51\xdd\x58\x17\x84\x09\x63\xda\x0c\x8a\xfb\xa4\x19\xb4\xcf\x20\x6f\x03\x54\x62\x8b\x40\x01\xc4\x56\x90\x16\xb9\x46\x28\xac\xbb\x63\x2f\x9b\x1c\x75\x17\x63\xed\x66\x2e\x45\xca\x83\x0c\x6d\xd1\xc7\xf2\xf2\xb3\x30\xea\x67\xe9\x7d\x5a\x11\xb3\x28\xe1\xca\x84\x26\x24\x85\x75\x89\x90\x12\xbd\xa7\x9c\x34\x85\xdd\x84\x7d\x59\xce\xe1\xff\x2c\x57\x6d\x53\xc2\x70\x72\x16\xfb\x30\x14\x88\xca\x83\x70\x08\xdc\xe1\xc8\x04\x74\x8d\x43\x9e\x15\x84\x07\xdf\x08\x89\x7d\x35\xf4\xb5\xd0\x1a\x3a\x52\xa1\x9a\x4c\x01\x00\xa4\x68\x3d\xfa\x51\x1b\x77\xae\xce\x89\x06\x96\xd0\x59\xa7\x80\x23\xc7\xfa\xb3\xfe\xf0\x78\x97\x1a\x15\xb5\x75\x2c\x94\x5f\xfd\x82\xde\x63\x8e\x42\x56\x69\x8e\x9d\x70\x98\xf8\xba\xf5\x15\xaa\xc4\x16\x45\xd2\xe3\xb1\xbf\x8a\xc6\x24\xf6\xa5\xf5\xd5\x7a\x25\x2e\xe4\x4a\xe6\x05\x4e\x62\x4c\xbc\x4b\x22\xc8\xf7\xea\x9a\xd4\xd4\x64\xe0\x50\x86\x67\x8b\x19\x0c\xff\x9e\xff\x4e\xfb\x19\xd3\x37\x19\xbe\xc7\x4e\x9e\x41\x1f\xef\xbb\x75\x11\xa0\xb1\x9e\xb8\x8d\x66\x20\x72\x6f\x75\x1b\x90\x57\xbb\x8a\x02\x26\x11\x33\xa6\x05\xc3\x11\x97\x19\xb3\xbd\xb1\x74\x0a\x4b\x26\xd3\xc8\x92\x6f\x6e\x03\x1a\xd5\x0f\xaf\xfb\xbb\x44\xce\x33\xa4\x22\x56\x5e\xde\x43\x8d\x35\x9a\x30\x99\xf2\x72\xce\x9c\x91\xad\x8f\xec\xe9\x2a\x34\x60\xc4\x96\xca\x38\xe2\x05\x0b\x5b\x12\x51\x66\x83\xbb\xdc\x0a\xa7\x8e\xd9\xd4\x75\xdd\x5c\xb9\xb6\x11\x7a\x6e\x5d\x99\x1a\xab\x30\xbd\xbc\x7a\xf1\xf9\xf9\xe5\x09\x9c\xf3\xbd\xfe\x4c\xc8\x40\x5b\x9c\xfd\xde\x56\xfc\xad\x1f\xfa\x22\xd8\xa2\x0d\xf6\x18\xe0\xf1\xfb\xa4\xc5\x1c\xe0\xdd\x52\x8c\xec\x29\xa2\x3c\xb6\x91\xbc\x87\x27\x99\x0a\x1d\x85\x23\x40\x7b\xe5\x27\xd9\xf6\xa9\x34\xee\x13\x90\x1f\x14\xdc\xc5\x41\x8b\x9d\x6d\x43\x7f\x6f\x32\x83\x37\x7d\xcf\xa5\x31\x7d\x0e\x24\x18\x2d\xbd\xd6\x28\x5c\x41\xb7\xd9\x38\x0d\x40\xa1\xad\x08\x3e\x26\x1a\x67\x59\x6d\x15\x3a\x03\x43\xa3\xf0\x7d\xfa\x5d\x57\xd8\xa7\xd3\x3e\x63\xc8\x03\x97\x8e\x4e\xec\x62\xa4\xb7\x96\x78\x14\x85\x1f\x1a\x74\x02\xf2\xb6\xec\x03\x1b\x2a\xec\x53\xe8\x66\x90\xe3\xa7\x0a\x83\x7f\x03\x22\x04\x47\x79\x1b\x90\x55\x91\x91\xba\x55\x71\x9a\xdd\x75\x15\x3a\x66\x8c\x47\x9e\x9e\x99\x09\xca\xca\x96\xe9\x33\xef\x75\xfd\x10\x2a\x74\x1d\xf9\x58\x87\x86\x44\xee\x9d\x63\x4f\x9a\x06\x85\x03\x11\xa2\x64\xb0\x4d\xff\x18\xda\x4f\x42\x03\x13\x7d\xaf\x2a\xf0\x23\xcc\xa1\x44\x1a\x06\xae\x1b\x39\xe0\x73\xd3\xd3\x98\x4d\xae\xfa\xfb\xb7\x1e\x59\xc1\xcd\xe0\xbf\x13\xec\x46\x7c\x62\xc1\x4d\x9c\x0d\x6f\x7a\x50\xf4\x0e\x0c\x72\xde\x0b\xb7\x03\x2a\xa0\xf5\x64\xca\x01\x85\x2c\xc7\xc2\x3a\xbc\x61\x4f\x47\xfc\x07\x3f\x93\x9e\x66\x9e\x6d\xc8\x8a\xb4\xda\xbb\x3a\xef\x63\x3c\x7a\x36\xe8\x98\x1d\xad\x88\x82\xa7\xda\xfe\xf9\x12\x61\xce\xe0\x0c\xce\x8e\x13\xf6\xa8\xe4\x47\xff\x87\xbd\xd5\x90\xcc\xbf\xab\x8a\x97\x32\x86\xae\x7a\x9c\xe6\xfe\xcd\x3f\x5f\xbe\x7d\xf7\xdd\x37\xf0\x16\x15\x09\xf8\x4b\x8b\x8e\xd0\xc7\x76\xf2\x23\xfa\xc6\x1a\xcf\x41\xf9\x7a\x7c\x45\x00\x07\xc1\x23\xe0\xad\xa8\x1b\x8d\x3e\x66\xa2\xe3\xbc\x61\x00\x1b\x47\x35\xe3\xfd\xec\x69\x6d\x73\xe2\xae\x44\xce\x87\xa7\xcf\x0f\x63\x24\xc0\x5b\xab\xa8\xd8\x71\x67\x18\x49\xec\xf0\xd7\x96\xdc\xb0\xfd\x70\x97\x8b\xed\xf6\xab\x3a\x5e\x2b\xf2\x61\xc8\x63\x66\xe2\xb3\x9a\x4c\x32\xd4\x80\xf3\x35\xd6\xcf\x23\xd6\xe9\x14\xfe\xca\x8e\x82\x50\xbf\xb4\x3e\xc4\xb0\x47\x24\xb6\x84\x1d\xf7\x66\xdf\x53\xb5\x46\xec\x89\x2d\xad\x51\xb1\xe4\x0c\x01\x1c\xac\x35\x8e\x4c\x98\x4d\x00\x9e\x25\x1d\xe6\x1b\x0a\x09\x9b\x53\xb8\x25\x89\x49\x43\xb7\xa8\x13\x27\x02\x59\x7e\xb9\xae\xd6\xcf\xe3\x49\x3e\xe1\x30\x36\x82\x58\xc2\x78\x47\x35\xcd\xed\x1f\xec\xae\x16\xaa\xa1\x4f\x78\xcd\x0f\x5d\x38\x48\x41\xef\x80\xdf\x77\x8e\x07\x26\xd2\x3b\xbe\xf5\x71\xa4\xbf\x8d\x7f\x06\x51\x87\xca\xc4\x90\x71\x0f\x64\x6f\x84\x86\x37\xd7\xd7\xef\x62\xf0\xd1\xf3\x5b\x1c\x4e\xfa\x4b\x53\x35\x84\x2a\x76\x79\x85\x5a\xec\x12\x6d\x45\x1c\x52\xf8\x55\x9b\x44\x84\x13\x1e\x5d\x1e\x8f\x33\xd1\x46\x44\x78\xca\x31\x98\xee\x33\x9e\x7f\x3f\x24\xe8\xe9\x9c\x1e\x9c\x30\xbe\x11\x8e\x79\x7d\x3c\xd0\xc5\x69\xe7\x30\xbb\xdf\xdb\x4b\xa7\xf0\x4a\x0b\xb9\xe9\xad\x7a\x28\x84\x67\x03\xb1\x66\xf0\x4c\x72\x7b\xf2\x9a\xbe\x27\x7e\xef\xbd\x7d\xe7\xc4\xc7\x09\x80\x60\xcf\x45\xc6\x6d\x89\x7b\xfc\x87\x83\xa0\x42\x69\x23\x21\x4d\x06\xad\x51\xe8\x38\x6e\x7b\xb1\x9f\x2a\x87\xc5\xbf\x4e\x6e\x7c\x54\xdf\x9e\x9d\xc5\x1e\xf2\x8c\x0f\x3d\x87\xb3\xe7\x67\x7b\xb9\x3c\x77\x3f\x05\x0a\x1a\x3f\x29\x1b\x4f\x9d\x08\xf3\x58\xcd\x3f\x53\xf8\xda\x9a\xa7\x01\x7c\x65\x3b\x9e\x05\x37\x43\x06\xf2\xac\x59\x38\x51\xd6\xb1\x09\x2a\x34\x81\x0a\xe2\xe6\x3c\x8a\x59\x17\x3b\x45\x6c\x26\xbf\x88\xad\xf0\xd2\x51\x13\xb2\x1b\x68\x3c\xb6\xca\x42\xe3\x6c\xb0\xd2\xea\xe1\x7c\xba\xbf\xe8\xbf\xbf\x3c\x7b\x72\x36\x78\x3c\x3b\x5e\x3d\xd2\x72\xf6\x47\x37\xda\xfb\xdf\x38\x1c\x36\x4f\x06\x90\xc6\x61\x12\x27\xdc\xfb\xd1\x69\x7a\x66\xc5\x16\xf6\x6b\x6b\xc3\x28\x3f\x8e\xa3\x47\x7f\xc6\xb8\xba\xba\xea\xa3\xde\x88\x12\x93\xdc\xa1\xd8\x24\x64\x3c\x29\xcc\xfa\x44\xbb\x8f\x62\xcc\x4d\x7e\x69\x5f\x73\xdb\xf1\xd9\xb8\xbe\xcf\x38\xcc\xe7\xc3\xd3\x20\x8e\x74\x1d\xe6\xe9\x6a\xb1\xbc\x5c\x5c\x2e\xd7\xcb\xf5\xe2\xea\xfc\x22\xe5\xa3\x59\x9a\x4a\xef\x13\x45\x5e\xb6\xde\xcf\xc9\x48\xae\x2c\x31\x49\x3b\xda\x50\x3a\x9a\xf9\xb9\x37\x73\x04\x6e\xa8\x50\x8c\x9c\x3b\xed\x81\x49\x15\xe7\xaa\x84\x33\xa8\x19\x3d\x0f\x11\x7b\xaa\xcb\x41\xe4\x53\x37\x6d\xf8\x78\xb5\x8a\xff\x9f\x0f\x32\xd6\x35\x95\x30\x3e\x83\xf3\x1e\xad\x8e\x94\xed\xc6\xcf\x8f\xf7\xcf\x1f\xd9\x88\xd1\x3d\x31\xf1\x71\x32\xf9\x4f\x00\x00\x00\xff\xff\x38\x9b\x17\xc2\xcd\x16\x00\x00")

func cssMainCssBytes() ([]byte, error) {
	return bindataRead(
		_cssMainCss,
		"css/main.css",
	)
}

func cssMainCss() (*asset, error) {
	bytes, err := cssMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "css/main.css", size: 5837, mode: os.FileMode(438), modTime: time.Unix(1602766085, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cssNormalizeCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5b\x8f\xdc\xb6\x15\x7e\xd7\xaf\x38\x75\xe1\x97\xed\x68\x66\x67\x8d\x8d\x03\x2d\xf2\x90\xa6\x4e\x6b\xa0\x41\x8a\x3a\x6f\x81\x81\xa1\xa8\xa3\x11\xbb\x14\x29\x90\xd4\x5c\xd6\xe9\x7f\x2f\x0e\xa9\xfb\x65\xd2\x16\xd9\xa2\x7e\xf1\x0e\x45\x9d\x1b\xcf\xf7\x9d\x8f\xda\xdd\xfd\x0e\x94\x36\x25\x93\xe2\x05\xb7\xdc\x5a\x38\x7d\xbd\xbd\xdf\xee\xe1\x17\xf8\xe1\xe3\x4f\xf0\x57\xc1\x51\x59\x84\x5f\xe0\x28\x5c\x51\xa7\x5b\xae\xcb\x9d\x42\xae\x25\xb3\xbb\xf1\x7b\x77\xbb\x28\xda\xdd\xc1\x9f\x34\xaf\x4b\x54\x2e\x02\x80\x6f\x7e\xb3\x7f\x8d\xf5\xbb\x08\xee\x60\xbf\x85\xef\xb4\x31\xc8\x1d\xb8\x02\x41\x0a\x85\x50\xa0\x38\x16\x0e\x84\x02\x26\x25\xa4\x46\x9f\x2d\x1a\xbb\xa5\xed\x0f\x5b\xf8\x9b\xc1\x13\x2a\x07\x2c\xfb\x47\x6d\x1d\x45\x67\x41\xe7\x90\x6b\xe5\xc0\x8a\x17\x04\x96\x3b\x34\xa0\x8d\x40\xe5\x98\x13\x5a\x01\x2f\x98\x3a\xa2\x25\x8b\xe2\xc7\x4f\x64\x68\x17\x45\x85\x2b\x25\x7c\x89\xc0\xfb\x8c\x83\xcf\x04\xf6\xdb\xfd\xe3\x13\xec\xee\x60\x4f\x9b\x00\xe2\x33\xa6\xcf\xc2\xc5\x0e\x2f\x2e\x26\xf3\x71\xf0\x9b\xc0\xfe\xfe\xfe\xad\xdf\xf9\x40\x3b\xff\xe9\xeb\xf5\x09\x39\x39\xb4\xaf\x57\xaf\xbf\x63\xa9\x4f\xe8\x6b\x55\x32\x73\xa4\x8c\xe6\x65\xda\x45\x51\xaa\xb3\xab\xcf\x2e\xec\x4a\xe0\xfe\x29\x02\x48\x19\x7f\x3e\x1a\x5d\xab\x2c\xe6\x5a\x6a\x93\x40\x2a\x19\x7f\xa6\x47\xcd\xef\xdf\xe7\x79\x4e\x3f\x7d\xbe\x4c\x8a\xa3\x4a\x80\xa3\x72\x68\x68\x95\x8a\x1c\xe7\xac\x14\xf2\x9a\xc0\xb7\x46\x30\xb9\x81\xbf\xa0\x3c\xa1\x13\x9c\x6d\xc0\x32\x65\x63\x8b\x46\xe4\x4f\xa1\x20\x4d\xc8\x2a\x43\xe3\x43\x3e\x94\x4c\xa8\x03\xa0\x44\x3a\x37\xe0\x5a\x59\x61\x1d\x2a\x27\xaf\x94\xc7\xc7\x0f\x4d\xf4\xb4\xcd\x47\x9f\x09\x5b\x49\x76\xa5\x38\x35\xc5\xd9\x5b\x1d\x76\xcd\xe0\xec\x55\xd6\xd6\x45\x2b\x38\x14\xfb\xce\x99\x85\xb3\x70\x85\x50\x70\xb0\xe1\x90\x0e\xb4\x99\x2c\x1d\x98\x71\x82\x4b\x3c\x50\x3c\x94\xb7\x6f\x94\xef\x0a\xa3\x4b\xdc\xc0\xf7\xc2\x60\xae\x2f\x1b\x6f\xfa\x13\xcb\x99\x11\x6d\x03\xed\x7d\x88\xbe\x26\xe4\x3c\x81\x07\x2c\x9f\x86\x25\xdf\x7e\xf5\x1e\x4b\xaa\x7c\xe8\x8e\x3f\x1b\x5d\x57\x42\x1d\x83\x9f\x57\x46\xd5\xb7\x59\xe6\x6b\xc3\x9b\x3a\xa5\xfa\x42\x25\x22\xf7\x42\xb5\x59\xb5\x98\xfa\x54\xe8\xb3\xdf\xad\x4f\x68\x72\xa9\xcf\xb4\xe7\x43\x76\x0c\x05\xed\x8e\xa5\x30\x3e\xe3\x54\x5f\xe2\x60\x2a\x69\x53\x89\x53\x7d\x19\xc2\xa6\x85\xd3\xfd\x70\xb1\x35\x9e\xc0\x49\x58\x91\x4a\x9c\xc0\x67\x89\x10\x84\x2a\xd0\x08\xc7\x14\x0f\xb1\x58\xce\x24\xe5\x30\x42\xfc\x0a\x53\x0c\xed\xe8\x2c\x83\x03\x96\x87\xee\xad\xa6\x10\x0b\xd0\xa9\x0c\xf6\x07\xdb\x36\x7b\xa9\x95\xb6\x15\xe3\xb8\xe9\xff\x1c\xe6\x36\xe8\x82\x3d\x96\x53\x5e\xf8\x89\xd0\x24\xf1\x84\x12\x2c\x96\x4c\x39\xc1\xff\x37\x1c\x71\x34\xec\x3a\x40\x3d\x81\x82\x71\x27\x4e\x9e\x69\x9f\x6d\x00\x1d\xec\xef\x9b\xd4\x59\x38\xdf\x19\x4b\x38\xc3\x94\xad\x98\x41\xe5\x9e\xc6\x67\x35\xf0\x95\x6a\xe7\x74\x09\xa9\x36\x04\xf7\x0e\x42\xf0\xf8\x3e\x6e\x0e\x64\xda\x93\x04\x36\xc8\x90\x6b\x13\x78\x7a\x00\x3b\x6a\xbe\x0d\x7c\xfc\xb0\x81\x1f\x2b\x34\x6c\x01\x7e\x2c\x4d\xcd\xcf\x4e\x38\x89\x9f\x9b\xae\x24\xbf\x71\x88\x22\x01\xa5\xd5\xe8\x80\x3c\xa1\xf5\xbe\x12\xa8\x89\x95\x88\xfb\xfb\xc3\xba\xb5\x0b\x32\xed\x1c\x66\x4b\x2d\x3b\x4d\xcb\xb7\xd8\xb9\x1b\x62\xe3\x94\x66\x79\xa4\x9b\xc8\x3a\xa3\xd5\xb1\x6f\xba\x73\x83\x9e\x54\xcb\x8c\x88\xf7\xff\x09\x1d\x5c\x67\xb8\x89\x9e\xd3\x6c\x13\x59\x56\x56\xbf\x31\x52\xd6\xeb\xb9\x96\xca\x2e\x8a\x6c\x49\x8b\x13\x2e\xfe\xfa\xfe\xed\xb0\x70\xad\x6a\x38\xd8\x3a\xf5\xcc\x4f\x7f\x55\x83\xe9\x90\x1b\x5d\x02\xcb\x73\x1a\x0e\xea\xb8\x20\x46\xc8\xca\x92\xf3\x9a\x0e\xb0\xae\xa6\xfe\xdf\x3f\xbe\x7d\x9a\x8a\x0b\x3f\x83\x2b\x6d\x45\xe8\x2d\x83\x92\x11\x16\x69\xf5\x84\x34\x84\x98\x6c\x67\x6e\xca\x2c\xfa\xe6\xa4\x1c\x6c\x9d\x36\x2d\x1e\x7a\x3b\xbe\xdf\x3e\x3c\xd2\xac\xf1\xcf\x82\x6b\xa7\x2b\xff\xa0\x5d\xdf\xdd\xc1\x87\x32\xc5\x2c\xc3\xec\xf5\xe7\xcd\x88\x05\x3c\xfc\x09\xcd\x25\x0b\xa2\xcb\x8a\x6c\x85\x6f\x44\x79\x1c\x62\xd7\xba\xab\xc4\x06\xba\x4d\x0e\xdf\x6b\x53\xbe\x22\x55\x12\x9e\xbc\x38\x1c\xe8\x08\x0a\xc2\xae\xa1\x66\x51\x7f\x35\xd3\x74\x01\xdb\xb5\x73\x5a\x6d\x22\xa1\xaa\xda\x6d\x22\x5d\x39\xe2\xd5\x6a\x13\x59\x94\xc8\xdd\x26\x22\xbe\x61\x06\xd9\x1c\x46\x0d\xb4\xd7\x90\xd3\x8a\xcf\xe6\xd1\x4d\x0d\xdb\x4b\xc0\x05\xb0\x2d\x8e\xfe\x30\xf1\xa9\x3a\xab\xca\x60\x29\x43\xf8\x72\x73\xda\x8f\x34\x61\x57\xc6\x21\x87\xe9\x3c\xcc\x04\x3f\x6f\x72\x6d\xca\xd6\xdb\x44\x87\xf5\xf1\xfd\x27\x86\x06\xa2\x67\x10\x79\x38\x8a\x51\xe8\x7e\x0a\x74\xaf\x8e\x1a\x72\xa6\x3d\x85\x62\xa9\x90\xc2\x5d\xc1\xe9\xd0\x3b\xc0\xa5\xe0\xcf\x2c\x95\x08\xee\x5a\x75\xd7\x8e\xf5\xee\xf8\x99\xb6\x7d\xf3\x26\xfc\x7c\xf3\xb9\x5b\x30\x68\xd1\x0d\x7e\xdb\x3a\x2d\x85\x7b\x13\xc6\x5d\x7b\x31\x61\x55\x85\xcc\x50\xd2\x09\x04\x0b\xab\x75\x56\x68\x5a\x78\x52\x2c\x15\xcb\xb2\xb9\x1c\xec\xe2\x4a\x92\xb8\xd4\x2f\x71\xae\x79\x6d\x63\xff\xf2\x2c\xd2\x1b\x5b\x9a\xd8\x6f\xec\x68\xb3\x99\x6f\x59\xa5\x04\x68\x63\x4e\x3a\x51\xdd\x64\x69\x9d\x36\x2d\x86\x79\x6d\x5b\x10\xd7\xca\xa2\x83\xf4\xea\x9f\x54\x06\x4f\x42\xd7\x16\x4c\x2d\xc7\xed\x3b\x88\xc0\x08\x75\x9c\xe7\xb9\xf2\xbc\x4d\x72\xe5\x71\x97\xe1\xf8\xb9\x4f\x4f\xd7\x8e\x30\x9b\xc0\xbe\xba\x34\xd2\x02\xfe\xe8\xdd\x91\x56\x5c\x6b\xb6\xd5\x23\xcb\x05\xca\x8c\x72\xfd\x32\x2a\xd2\xf6\xdd\x23\x5d\x40\xb6\xef\xc3\x7f\x5f\x3d\xf4\xd3\x61\x49\x4e\x78\xc8\x9c\x0d\xab\xaa\xc6\xc9\xe4\x0a\x30\x95\x0d\x5e\x1d\x8e\x70\xe7\xa7\xe8\xa1\x8d\x66\x30\x5e\x7b\x52\x79\x37\x02\x6d\x9b\x91\xd5\x90\x91\x3e\xd6\x15\x1a\x0b\xcc\x20\x28\xed\x80\xb3\x9a\x86\xaf\xae\x1d\x9c\x0b\x54\xf4\xc6\x15\x5e\xd0\x68\x5a\x22\x63\x00\x6b\xde\x16\x46\xb5\xc4\x23\xaa\x6c\x76\x85\xe9\x84\xe3\xe8\x06\xd3\x28\xdf\x21\x0d\x37\x1a\xb1\xbb\x93\x3a\xd6\xde\x61\x3a\xa2\xbd\xc4\x67\x91\xb9\x62\x4e\xd0\x83\xc6\xa5\xd5\x77\x61\xf5\x5c\x08\x87\xb1\x97\x48\x49\xf3\xe5\xa6\x7f\x69\x5d\x10\xb5\x62\x01\xbc\x58\xf0\x57\xe9\xb5\x1b\xab\x57\xcf\xdd\xc5\x46\x1f\x0d\x5a\xeb\x2b\x70\x53\x70\xcc\xd9\x23\xc3\x9c\xd5\x72\xe0\xda\x72\xa3\xa5\x4c\x99\xe9\x66\xfa\x1f\x1a\x37\xa3\x99\xd6\x4f\x01\x56\x3b\x3d\xe9\xbd\xdb\x77\xd4\x4e\x28\x4c\xe6\xee\x00\x04\x43\x2d\xd1\x80\x8e\x17\xc8\x9f\x53\x7d\x19\xf2\x28\xcb\x84\x7e\xf3\xf9\xdf\x3c\xf8\xc9\x49\x4d\xc6\xe5\xa8\xfd\x6b\x63\xb5\x69\x48\x5f\xe7\x20\x14\x37\xe1\xc3\x06\x55\x3e\xc3\xf6\x57\xa0\x91\xc1\x57\x85\x71\xc4\xaa\x2e\x53\x34\x9e\x08\x1b\x4e\xf7\x2c\x18\xdb\x4a\xa8\x78\x32\x23\xe6\x7b\x75\xed\xc6\x7b\x7d\x9a\xad\x14\x58\x28\xfa\x54\xf7\xf7\x03\x64\x70\x67\x1b\xcf\xaa\xd9\x75\x21\x90\x57\x93\xb9\x50\xe3\xb1\xd6\xb2\x1f\x32\xc3\x8b\x1b\xd3\x8a\xfa\xc4\x63\x77\xf4\x8d\x20\x98\x8e\x75\x9e\x5b\x74\x09\xc4\x0f\xd5\x65\xe9\x1c\x66\x83\x6d\xd0\x15\xb3\x1c\x48\x8d\x96\x8c\x77\x9f\xfe\x26\x11\xf6\xc5\x0c\x2b\x83\x0b\xe0\x6a\xf0\x53\x49\x30\xbb\x98\xfd\x77\xaa\xc0\x57\x3a\x08\x52\x2f\x46\x2b\x43\x84\xe8\x04\x5a\x32\x74\x68\xd8\xe8\x30\xab\x79\x9f\x42\x2e\x24\xc6\x75\x25\x35\xcb\x86\x0d\x71\x43\x2e\x4c\x14\xe6\x02\xe7\x05\x29\xfe\x51\x39\x34\xe1\xeb\xc1\xab\x08\xf2\x25\xa6\x6b\xb8\xb6\x97\x81\x81\x69\x02\xb7\x8d\x47\x60\x86\x8e\x09\x69\xd7\x3f\x1b\xfe\x8a\xfd\xc5\xbb\x5d\x59\x32\x73\x1d\x9b\x94\xc2\xba\x58\xb8\xfe\x9a\xf5\x83\xb0\xfc\xf5\x6e\x28\x37\x22\x9e\xb0\x6e\x59\x49\xe6\x70\x1c\xec\xb4\x4d\x7f\xcd\x5a\x0b\x90\x42\x64\x19\xaa\xcf\xcb\xc6\xfe\x15\x00\x00\xff\xff\x62\x0a\x21\xa9\x67\x18\x00\x00")

func cssNormalizeCssBytes() ([]byte, error) {
	return bindataRead(
		_cssNormalizeCss,
		"css/normalize.css",
	)
}

func cssNormalizeCss() (*asset, error) {
	bytes, err := cssNormalizeCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "css/normalize.css", size: 6247, mode: os.FileMode(438), modTime: time.Unix(1602766085, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _faviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\xd3\x3d\x4a\x04\x41\x14\x45\xe1\xaf\x65\xd4\xb4\x23\xe3\x01\x41\x44\xc5\x55\x88\x89\x46\x6e\xc0\xd4\x8d\x88\x82\xb8\x03\x31\x14\xcc\xdc\x81\x9b\x30\x14\x34\x73\x0b\x2a\x4d\x5d\x69\xbb\x41\x66\xfc\xeb\xc9\xc4\xb9\x70\xa8\xe2\x16\xe7\x45\xaf\xa8\x54\xea\xba\x3d\xc7\x8e\x46\xac\x60\x1d\x35\xc6\xba\xfe\x3d\x23\x56\xb7\x3b\x3e\x92\xfc\x33\x1a\xf2\xfc\x0d\xcd\x00\xff\x9a\xec\x90\xdd\x29\xda\xee\x6a\x80\x7f\x4a\x50\x4c\xa6\xed\x72\x3c\x07\xfe\x19\xcd\x02\xa5\xa2\x2c\x52\x96\xba\xfb\x4b\xd5\xcf\xfe\xcd\x7f\x20\x17\x64\x8d\x5c\x92\x1b\xca\x26\x39\xe9\xdf\x86\xec\xc0\x3d\xd9\x22\xe7\xfd\xac\x0d\x72\x3b\xc3\x0e\x3d\x91\x43\xb2\x47\xf6\xc9\x01\xb9\x9b\xc1\x2f\xe4\x75\x8a\xf2\x07\xfe\xc6\x17\x7c\xce\xf2\xe3\x24\x3f\xe5\x2d\x00\x00\xff\xff\xb5\x31\x15\xa3\x7e\x04\x00\x00")

func faviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_faviconIco,
		"favicon.ico",
	)
}

func faviconIco() (*asset, error) {
	bytes, err := faviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "favicon.ico", size: 1150, mode: os.FileMode(438), modTime: time.Unix(1602766085, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _getHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x41\x6f\xd4\x30\x10\x85\xef\xfb\x2b\x06\x1f\x38\xb1\x9b\xc2\xa9\x02\x3b\x12\x42\x95\xb8\x20\x21\x81\xc4\xd9\x6b\xcf\xd6\x03\x8e\x6d\x79\x26\x9b\x86\xaa\xff\x1d\x39\x21\x55\x7a\x41\x9c\xd6\xeb\xcc\x7c\x9e\xf7\x9e\xad\x5f\xf9\xec\x64\x2e\x08\x41\x86\xd8\x1f\x74\xfb\x01\x17\x2d\xb3\x51\x29\x1f\x7f\xb2\x82\x68\xd3\xbd\x51\xaa\x3f\x1c\x74\x40\xeb\xfb\x03\x80\x1e\x50\x2c\xb8\x60\x2b\xa3\x18\x35\xca\xe5\x78\xab\x96\x0f\x42\x12\xb1\xff\x81\xd1\xe5\x01\x41\x32\xdc\x7d\xfd\x7c\xf7\x45\x77\xeb\xfe\x73\x6b\xb2\x03\x1a\xe5\x91\x5d\xa5\x22\x94\x93\x02\x97\x93\x60\x92\xe5\xa4\x97\x65\x57\xc2\xa9\xe4\x2a\xbb\x9a\x89\xbc\x04\xe3\xf1\x4a\x0e\x8f\xcb\x9f\x37\x40\x89\x84\x6c\x3c\xb2\xb3\x11\xcd\xdb\x15\x13\x29\xfd\x82\x8a\xd1\x28\x96\x39\x22\x07\x44\x51\x10\x2a\x5e\x8c\xea\x1c\x73\x37\x58\x4a\x27\xc7\xac\xa0\xfb\xbf\x86\x94\xeb\x60\x23\xfd\xc6\xe7\x2e\xdd\xad\xbe\x1c\xf4\x39\xfb\x79\xa1\x94\x7e\xd1\x0d\x36\xc6\x3c\x31\xcc\x79\x6c\x5e\x30\xba\xb1\x62\x9c\x81\x83\xad\xd8\xd4\x5c\xc8\x63\x6a\x53\x03\xa5\x4b\x03\x37\x2f\x00\x2d\x53\x9c\x4f\xba\x2b\x0b\x2c\xd4\xbf\xb3\x95\xfe\x7b\x40\x58\x26\x2c\x35\x5f\xc9\xa3\x5f\x2c\xb1\x94\xd0\x83\x04\x84\x4b\x6e\x07\x52\xba\xdf\xf3\xde\x6f\xa0\xb6\xd3\x16\x00\xda\xd3\xb5\xd7\x82\x0f\x62\x2b\x6e\x3e\x33\xba\xda\xc4\xd6\x3c\xb1\x51\xef\x6e\x9a\xdf\x91\x8d\xba\xbd\x51\xfd\xe3\xe3\xe9\xe9\x49\x77\x5b\x47\xaf\xbb\x46\xd8\xb1\x28\x95\x51\xa0\x5d\x25\xa3\xce\xa3\x48\x8b\xf4\x6a\xe3\x88\x46\x7d\x0b\x79\x52\xfd\xeb\x74\xe6\xf2\xe1\x5f\x75\x9f\x72\x99\xd5\x0b\x72\xb7\x9b\xb8\x89\x27\x5e\xd5\x13\x43\xca\x13\xe0\x43\xa1\x8a\x1e\x6c\x5a\xd5\xef\x3d\x0c\x96\xe1\x8c\x98\xc0\x63\x44\x41\xbf\xb9\xb9\xf3\x73\x81\x6a\xbb\x85\x6b\xcf\x79\x94\x53\x7b\x00\xaa\xff\xd8\xd6\xdb\xdd\x6d\x6a\x4b\x8b\x79\x8d\xb7\xe5\xbd\x3c\x96\x3f\x01\x00\x00\xff\xff\xfe\x98\x45\xa4\x3d\x03\x00\x00")

func getHtmlBytes() ([]byte, error) {
	return bindataRead(
		_getHtml,
		"get.html",
	)
}

func getHtml() (*asset, error) {
	bytes, err := getHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "get.html", size: 829, mode: os.FileMode(438), modTime: time.Unix(1602767570, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x41\x8f\xd3\x30\x10\x85\xef\xfd\x15\xc3\x9c\xc9\x66\xe1\xb4\x07\x3b\x12\x42\x15\x1c\x40\x54\x0b\x88\xf3\xc4\x9e\x6e\xcc\x3a\x76\x64\x4f\xd2\x0d\xbf\x1e\xd9\xd9\x56\xad\xb8\x70\xaa\x1b\xcf\x7c\xf3\xfc\x9e\xad\xde\xd8\x68\x64\x9d\x18\x06\x19\x7d\xb7\x53\xe5\x07\x8c\xa7\x9c\x35\x86\xd8\xfc\xce\x08\x9e\xc2\x93\x46\xec\x76\x3b\x35\x30\xd9\x6e\x07\xa0\x46\x16\x02\x33\x50\xca\x2c\x1a\x67\x39\x36\x0f\x58\x37\xc4\x89\xe7\xee\x17\x7b\x13\x47\x06\x89\xb0\x3f\x7c\xde\x7f\x55\xed\xf6\xfd\xd2\x1a\x68\x64\x8d\x96\xb3\x49\x6e\x12\x17\x03\x82\x89\x41\x38\x48\x9d\x74\x5b\xb6\x38\x3e\x4d\x31\xc9\x55\xcd\xc9\x59\x19\xb4\xe5\xc5\x19\x6e\xea\x9f\xb7\xe0\x82\x13\x47\xbe\xc9\x86\x3c\xeb\x77\xff\x60\xa6\x44\x4f\x23\x5d\x41\x42\x6c\x0c\x99\x81\x11\xda\x5a\xeb\x5d\x78\x86\xc4\x5e\x63\x96\xd5\x73\x1e\x98\x05\x61\x48\x7c\xd4\xd8\x9a\x9c\xdb\x91\x5c\xb8\x33\x39\xff\x77\x43\x88\x69\x24\xef\xfe\xf0\xa5\x4b\xb5\x9b\x87\x3b\xd5\x47\xbb\x56\xca\xd4\x55\x8f\x80\xbc\x8f\xa7\x0c\x6b\x9c\x8b\x6f\x99\xcd\x9c\xd8\xaf\x90\x07\x4a\x5c\x44\x1f\x9d\xe5\x50\x4e\x08\x2e\x1c\x0b\xb8\xf8\x06\x4c\xd9\xf9\xf5\x4e\xb5\x53\x85\x0d\xe9\x55\xdb\xd4\x1d\x28\x0b\x83\x0c\x7c\x53\x2f\x11\x7a\xde\xa0\x16\x5c\xa8\xfb\xc2\x2f\x02\x7d\x7c\x81\x9e\x7d\x3c\x01\x05\x0b\xc6\x3b\xf3\x0c\x79\xee\x47\x27\x17\x78\xa1\x00\x99\xc2\xd1\xd8\x66\x5a\xb8\x45\x18\x59\x86\x68\x35\x1e\xbe\x7d\xff\x81\xc0\xa1\x5e\x27\x8d\xe3\xec\xc5\x4d\x94\xa4\x2d\x5d\x8d\x25\xa1\x9a\x08\x80\xb2\x6e\xe9\x54\x99\x49\x89\xcf\xe1\x14\xd8\xc7\x2d\x18\x84\x14\x4f\x59\xe3\xfb\xfb\x92\x95\xcf\x1a\x1f\xee\xb1\x53\xed\xb9\xa3\x53\x6d\x21\x5c\xb1\x5c\x98\x66\x81\x6d\xee\x26\x19\x61\x21\x3f\xb3\xc6\x7d\x30\x69\x9d\xa4\x9e\xe9\x13\x0b\x3c\xb2\x24\xc7\x0b\x79\xf8\xf9\xf8\x05\x6f\x50\x55\xe8\xeb\xfa\x6c\x63\x35\x52\xd1\x39\x53\xea\xe3\x2c\x77\xe5\x8d\x60\xf7\xa1\xac\xcf\xd7\xbb\x88\x9a\x4a\xba\x5b\xaa\x25\xe6\xfa\x9e\xfe\x06\x00\x00\xff\xff\x96\x40\x47\xd3\x60\x03\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 864, mode: os.FileMode(438), modTime: time.Unix(1602767568, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _robotsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x28\x2f\x2f\xd7\x2b\xca\x4f\xca\x2f\x29\x2e\xa9\x28\xd1\xcb\x2f\x4a\xd7\xe7\xe2\x52\x56\x70\xc9\x2c\x4e\xcc\xc9\xc9\x2f\x57\x48\x2e\x4a\x2c\xcf\xc9\xcc\x4b\x57\xc8\x4f\x53\x48\xcc\xc9\x51\x48\xce\xcf\x2b\x49\xcd\x2b\xe1\x0a\x2d\x4e\x2d\xd2\x4d\x4c\x4f\xcd\x2b\xb1\x52\xd0\xe2\x82\x29\x07\xb1\x01\x01\x00\x00\xff\xff\x7a\x9f\x21\x85\x53\x00\x00\x00")

func robotsTxtBytes() ([]byte, error) {
	return bindataRead(
		_robotsTxt,
		"robots.txt",
	)
}

func robotsTxt() (*asset, error) {
	bytes, err := robotsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "robots.txt", size: 83, mode: os.FileMode(438), modTime: time.Unix(1602766085, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _saveHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc1\x6e\x13\x31\x10\xbd\xe7\x2b\xa6\x3e\x93\x2c\xa5\x1c\x2a\xe4\x5d\x09\xa9\x91\x8a\x54\x28\x6a\x53\x71\x76\xec\xd9\xda\xe0\xb5\x57\x9e\xd9\x84\x50\xf5\xdf\xd1\x38\xdd\x2a\xe5\xc4\x29\x76\xd6\xef\xcd\x7b\x6f\x66\xf4\x99\xcb\x96\x0f\x23\x82\xe7\x21\x76\x0b\x2d\x3f\x60\xa3\x21\x6a\x55\xca\xcb\x9f\xa4\x20\x9a\xf4\xd8\x2a\xd5\x2d\x16\xda\xa3\x71\xdd\x02\x40\x0f\xc8\x06\xac\x37\x85\x90\x5b\x35\x71\xbf\xbc\x54\xf5\x03\x07\x8e\xd8\xfd\xc0\x68\xf3\x80\xc0\x19\xd6\xdf\xaf\xd7\x5f\x75\x73\xfc\xff\x15\x9a\xcc\x80\xad\x72\x48\xb6\x84\x91\x43\x4e\x0a\x6c\x4e\x8c\x89\x6b\xa5\xb7\xcf\x76\x01\xf7\x63\x2e\x7c\xf2\x66\x1f\x1c\xfb\xd6\xe1\x2e\x58\x5c\xd6\xcb\x3b\x08\x29\x70\x30\x71\x49\xd6\x44\x6c\xcf\x8f\x34\x31\xa4\x5f\x50\x30\xb6\x8a\xf8\x10\x91\x3c\x22\x2b\xf0\x05\xfb\x56\x35\x96\xa8\x19\x4c\x48\x2b\x4b\xa4\xa0\xf9\x3f\x40\xca\x65\x30\x31\xfc\xc1\x57\x94\x6e\x8e\xb9\x2c\xf4\x36\xbb\x43\x65\x19\xbb\xea\x1b\x4c\x8c\x79\x4f\x70\xc8\x93\x64\x41\x68\xa7\x82\xf1\x00\xe4\x4d\x41\x71\xd3\x07\x87\x49\x54\x43\x48\xbd\x10\x4b\x16\x80\x86\x42\x3c\xac\x74\x33\x56\x32\x5f\x5e\xb4\x8d\xdd\xc6\x23\xd0\xb4\x1d\x02\x33\xba\x37\x18\x6b\x12\x6c\x11\x0a\x72\x09\xb8\x43\x07\x13\x85\xf4\x08\xec\x11\xfa\x2c\x2a\xe4\x26\xe6\x3e\xcd\xb4\x82\x95\x03\x80\x76\x61\xd7\x69\xc6\xdf\x6c\x0a\xce\xa9\x13\xda\x22\xd6\x4b\xde\x53\xab\x2e\x24\xfc\x48\xad\xba\x7c\xaf\xba\xa7\xa7\xd5\xf3\xb3\x6e\x66\x40\xa7\x1b\x21\x38\xa1\x12\xa1\x81\x6a\x39\x30\xc9\xcd\x7d\x83\x7d\x88\x51\x54\x3a\x8c\x28\x06\x4c\xcf\x58\xe0\xc3\x47\xf0\x79\x2a\x24\x4f\x9b\x5c\xe0\x1c\x26\xc2\xd9\xbd\xf8\xbf\xe8\xae\x6e\xe1\xdb\xed\x06\x36\xeb\xfb\x0d\x6c\xae\xbf\xdc\xc3\xc3\xdd\xcd\x99\x6e\xfc\xc5\x4b\x2e\x57\x59\xec\x19\x50\x8c\xc4\x0a\x72\x5f\x8d\x3f\xdc\xdd\x1c\x4b\xda\x3c\x25\x06\x53\x1b\x21\xfc\xb5\x2d\xe8\xe6\xb4\x4c\xac\x2a\x05\x72\x1a\xe9\x3f\x6a\xab\xa2\x53\xab\xcd\x49\x82\x73\x8f\xaa\x1a\x6d\xe6\x81\x31\xdb\x3c\xf1\x4a\x96\x4a\x75\x9f\xe5\x3c\xef\x83\x84\x36\xca\xe8\x1c\x47\x46\x66\xa8\x2e\xe0\xdf\x00\x00\x00\xff\xff\x35\xec\x7e\x8e\x91\x03\x00\x00")

func saveHtmlBytes() ([]byte, error) {
	return bindataRead(
		_saveHtml,
		"save.html",
	)
}

func saveHtml() (*asset, error) {
	bytes, err := saveHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "save.html", size: 913, mode: os.FileMode(438), modTime: time.Unix(1602767566, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"404.html":          _404Html,
	"about.html":        aboutHtml,
	"css/main.css":      cssMainCss,
	"css/normalize.css": cssNormalizeCss,
	"favicon.ico":       faviconIco,
	"get.html":          getHtml,
	"index.html":        indexHtml,
	"robots.txt":        robotsTxt,
	"save.html":         saveHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"404.html":   &bintree{_404Html, map[string]*bintree{}},
	"about.html": &bintree{aboutHtml, map[string]*bintree{}},
	"css": &bintree{nil, map[string]*bintree{
		"main.css":      &bintree{cssMainCss, map[string]*bintree{}},
		"normalize.css": &bintree{cssNormalizeCss, map[string]*bintree{}},
	}},
	"favicon.ico": &bintree{faviconIco, map[string]*bintree{}},
	"get.html":    &bintree{getHtml, map[string]*bintree{}},
	"index.html":  &bintree{indexHtml, map[string]*bintree{}},
	"robots.txt":  &bintree{robotsTxt, map[string]*bintree{}},
	"save.html":   &bintree{saveHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
